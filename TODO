TODO

error messages (macros/syntax)

trick for defining additional primitives nicely/extensibly
perhaps both:
  - register-backprop
  - define/backprop (use reverse-transform/backprop,
    then 'register' using the trick)

cosmetics for D+:
  - explicit closure variables can be passed by user

'lists' passed to backpropagators might have a tail of (gen-zero) (== null)
  - make sure this case is handled
  - other cases like this?

unbox0 needed? (test case?)

additional backpropagators:
 - foldl/foldl0
 - math/array
 - hash tables (second derivative of)
 - list* without split-at

public/private modules

put define-primitive in a separate module (this is part of the interface)

put prim definitions somewhere else (e.g. arith.rkt, base-prim.rkt, base.rkt?)

tips for writing backpropagators (doc page)
 - use scale and add instead of * and +, which will handle structured input and gen-zero
 - might be passed a gen-zero: make sure that this case is handled
   properly, including in e.g. tail position in a list, where it may
   mean null

require/backprop/provide (see require/typed/provide) - require and re-provide
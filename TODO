TODO

* Interface
  - local-register-primitive!/register-primitive! isn't quite right (doesn't
    work for interactive)
  - sometimes want to define a plain function and attach derivative information
    (e.g. matrices)
  - define/backprop (vs define/D+)
  - separate rackpropagator/matrix (separate package?)

* Robustness
  - E.g. if (provide (backprop-out map1)) is missing from primitives.rkt,
    the resulting error is confusing
  - better error messages (macros/syntax)
  - 'lists' passed to backpropagators might have a tail of (gen-zero) (== null)
    - make sure this case is handled
    - other cases like this?
  - More tests of second derivatives

* Additional backpropagators
  - math/array
  - hash tables (second derivative of)
  - */multiply with more than two args

* Optimizations
  - next 'phase'
  - add note to README

* Documentation
  - Tips for writing backpropagators (doc page)
    - use scale and add instead of * and +, which will handle structured input and gen-zero
    - might be passed a gen-zero: make sure that this case is handled
      properly, including in e.g. tail position in a list, where it may
      mean null
  - Limitation: keyword arguments won't work


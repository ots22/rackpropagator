TODO

* Interface
  - separate rackpropagator/matrix (separate package?)

* Robustness
  - E.g. if (provide (backprop-out map1)) is missing from primitives.rkt,
    the resulting error is confusing
  - Shadowing not handled properly
  - better error messages (macros/syntax)
    - raise explicit error from let-values when binding multiple values
  - 'lists' passed to backpropagators might have a tail of (gen-zero) (== null)
    - make sure this case is handled
    - other cases like this?
  - More tests of second derivatives
  - Tests of failure conditions

* Additional backpropagators
  - math/array
  - hash tables (second derivative of)
  - other mathematical functions
  - /
  - * with more than two args
  - vector via box, set-vector!
  - immutable-vector (as I currently handle vector)

* Documentation
  - Background
  - Builtins
  - Writing backpropagators (doc page)
    - use scale and add instead of * and +, which will handle
      structured input and gen-zero
    - might be passed a gen-zero: make sure that this case is handled
      properly, including in e.g. tail position in a list, where it may
      mean null

* Packaging

* Later
  - handle impersonators/renaming transformers better
    - could use 'origin syntax property to discover where an application
      came from (and register all(?) of these from the expansion)
  - optimization step after reverse transform
